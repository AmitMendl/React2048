{"ast":null,"code":"var _jsxFileName = \"/home/okbh/projects/reactprojects/React2048/src/Components/Tile/Tile.js\";\nimport React, { useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport './Tiles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tileWidth = 100;\nconst tileHeight = 100;\nconst tileMargin = 7.5;\n\nfunction move(xdiff, ydiff) {\n  if (xdiff != null || ydiff != null) return null;\n  return {\n    from: {\n      x: 0,\n      y: 0\n    },\n    to: {\n      x: xdiff * (tileWidth + tileMargin),\n      y: ydiff * (tileHeight + tileMargin)\n    }\n  };\n}\n\nconst getColor = val => {\n  if (val == Infinity) return '#456';\n  return `rgb(${64 + val / 6 * 128}, ${32 + val / 6 * 128}, 0)`;\n};\n\nfunction Tile(props) {\n  // const [ MoveX, MoveY ] = [ props.MoveX, props.MoveY ]\n  // const styles = useSpring(move(MoveX, MoveY));\n  return /*#__PURE__*/_jsxDEV(animated.div, {\n    className: props.value == null ? 'Empty' : 'Tile',\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Tile;\nexport default Tile;\nexport { tileWidth, tileMargin };\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/home/okbh/projects/reactprojects/React2048/src/Components/Tile/Tile.js"],"names":["React","useState","animated","useSpring","tileWidth","tileHeight","tileMargin","move","xdiff","ydiff","from","x","y","to","getColor","val","Infinity","Tile","props","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,OAAO,aAAP;;AAEA,MAAMC,SAAS,GAAG,GAAlB;AACA,MAAMC,UAAU,GAAG,GAAnB;AACA,MAAMC,UAAU,GAAG,GAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,KAArB,EAA4B;AAE1B,MAAID,KAAK,IAAI,IAAT,IAAiBC,KAAK,IAAI,IAA9B,EAAoC,OAAO,IAAP;AAEpC,SAAQ;AACNC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE;AAAX,KADA;AAENC,IAAAA,EAAE,EAAE;AAAEF,MAAAA,CAAC,EAAEH,KAAK,IAAIJ,SAAS,GAAGE,UAAhB,CAAV;AAAuCM,MAAAA,CAAC,EAAEH,KAAK,IAAIJ,UAAU,GAAGC,UAAjB;AAA/C;AAFE,GAAR;AAKD;;AAED,MAAMQ,QAAQ,GAAIC,GAAD,IAAS;AACxB,MAAGA,GAAG,IAAIC,QAAV,EAAoB,OAAO,MAAP;AACpB,SAAQ,OAAM,KAAKD,GAAG,GAAG,CAAN,GAAU,GAAI,KAAI,KAAKA,GAAG,GAAG,CAAN,GAAU,GAAI,MAAxD;AACD,CAHD;;AAMA,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACnB;AACA;AAEA,sBACA,QAAC,QAAD,CAAU,GAAV;AAAc,IAAA,SAAS,EACtBA,KAAK,CAACC,KAAN,IAAe,IAAf,GAAsB,OAAtB,GAAgC,MADjC;AAAA,2BAIE;AAAA,gBACGD,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA;AAJF,KAEKD,KAAK,CAACE,GAFX;AAAA;AAAA;AAAA;AAAA,UADA;AAUD;;KAdQH,I;AAgBT,eAAeA,IAAf;AACA,SAAQb,SAAR,EAAmBE,UAAnB","sourcesContent":["import React, { useState } from 'react';\nimport { animated, useSpring } from 'react-spring';\nimport './Tiles.css'\n\nconst tileWidth = 100;\nconst tileHeight = 100;\nconst tileMargin = 7.5;\n\nfunction move(xdiff, ydiff) {\n\n  if (xdiff != null || ydiff != null) return null;\n\n  return ({\n    from: { x: 0, y: 0 },\n    to: { x: xdiff * (tileWidth + tileMargin), y: ydiff * (tileHeight + tileMargin) },\n  });\n\n}\n\nconst getColor = (val) => {\n  if(val == Infinity) return '#456'\n  return `rgb(${64 + val / 6 * 128}, ${32 + val / 6 * 128}, 0)`;\n}\n\n\nfunction Tile(props) {\n  // const [ MoveX, MoveY ] = [ props.MoveX, props.MoveY ]\n  // const styles = useSpring(move(MoveX, MoveY));\n\n  return (\n  <animated.div className=\n  {props.value == null ? 'Empty' : 'Tile'}\n  key={props.key}\n  >\n    <b>\n      {props.value}\n    </b>\n  </animated.div>\n  );\n}\n\nexport default Tile\nexport {tileWidth, tileMargin}"]},"metadata":{},"sourceType":"module"}