{"ast":null,"code":"var _jsxFileName = \"/home/okbh/projects/reactprojects/React2048/src/Components/Grid/Grid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { initMatrix, generateNewTile, slideLeft } from './GridController';\nimport Tile, { tileWidth, tileMargin } from '../Tile/Tile';\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction rowWidth(width) {\n  return width * (tileWidth + tileMargin) + tileMargin;\n}\n\nfunction generateTileMatrix(tiles_m) {\n  const [width, height] = [tiles_m[0].length, tiles_m.length];\n  return new Array(height).fill(null).map((val, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      'width': `${rowWidth(width)}`\n    },\n    className: \"Gridrow\",\n    children: new Array(width).fill(null).map((val, x) => /*#__PURE__*/_jsxDEV(Tile, {\n      value: tiles_m[y][x]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 56\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this));\n}\n\nfunction Grid(props) {\n  _s();\n\n  const width = useState(props.width)[0];\n  const height = useState(props.height)[0];\n  const [tiles_m, setMatrix] = useState(generateNewTile(initMatrix(width, height)));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setMatrix(generateNewTile(slideLeft(tiles_m))),\n      children: \"slide left!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Gridcontainer\",\n        children: generateTileMatrix(tiles_m, width, height)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Grid, \"gVzYYjqfdzT2YhyHrJv697tsfX4=\");\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["/home/okbh/projects/reactprojects/React2048/src/Components/Grid/Grid.js"],"names":["React","useState","initMatrix","generateNewTile","slideLeft","Tile","tileWidth","tileMargin","rowWidth","width","generateTileMatrix","tiles_m","height","length","Array","fill","map","val","y","x","Grid","props","setMatrix"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,UAAR,EAAoBC,eAApB,EAAqCC,SAArC,QAAsD,kBAAtD;AACA,OAAOC,IAAP,IAAcC,SAAd,EAAyBC,UAAzB,QAA0C,cAA1C;AACA,OAAO,YAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,SAAOA,KAAK,IAAIH,SAAS,GAAGC,UAAhB,CAAL,GAAmCA,UAA1C;AACH;;AAED,SAASG,kBAAT,CAA4BC,OAA5B,EAAqC;AAEnC,QAAM,CAACF,KAAD,EAAQG,MAAR,IAAkB,CAACD,OAAO,CAAC,CAAD,CAAP,CAAWE,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAxB;AAEA,SACE,IAAIC,KAAJ,CAAUF,MAAV,EAAkBG,IAAlB,CAAuB,IAAvB,EAA6BC,GAA7B,CACE,CAACC,GAAD,EAAMC,CAAN,kBACA;AAAK,IAAA,KAAK,EAAE;AAAC,eAAU,GAAEV,QAAQ,CAACC,KAAD,CAAQ;AAA7B,KAAZ;AAA6C,IAAA,SAAS,EAAC,SAAvD;AAAA,cACK,IAAIK,KAAJ,CAAUL,KAAV,EAAiBM,IAAjB,CAAsB,IAAtB,EAA4BC,GAA5B,CAAgC,CAACC,GAAD,EAAME,CAAN,kBAAY,QAAC,IAAD;AAC3C,MAAA,KAAK,EAAER,OAAO,CAACO,CAAD,CAAP,CAAWC,CAAX;AADoC;AAAA;AAAA;AAAA;AAAA,YAA5C;AADL;AAAA;AAAA;AAAA;AAAA,UAFF,CADF;AAWD;;AAED,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEnB,QAAMZ,KAAK,GAAKR,QAAQ,CAACoB,KAAK,CAACZ,KAAP,CAAR,CAAsB,CAAtB,CAAhB;AACA,QAAMG,MAAM,GAAIX,QAAQ,CAACoB,KAAK,CAACT,MAAP,CAAR,CAAuB,CAAvB,CAAhB;AACA,QAAM,CAACD,OAAD,EAAUW,SAAV,IAAuBrB,QAAQ,CAACE,eAAe,CAACD,UAAU,CAACO,KAAD,EAAQG,MAAR,CAAX,CAAhB,CAArC;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMU,SAAS,CAACnB,eAAe,CAACC,SAAS,CAACO,OAAD,CAAV,CAAhB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACGD,kBAAkB,CAACC,OAAD,EAAUF,KAAV,EAAiBG,MAAjB;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlBQQ,I;;KAAAA,I;AAqBT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport {initMatrix, generateNewTile, slideLeft } from './GridController'\nimport Tile, {tileWidth, tileMargin} from '../Tile/Tile'\nimport './Grid.css'\n\nfunction rowWidth(width) {\n    return width * (tileWidth + tileMargin) + tileMargin\n}\n\nfunction generateTileMatrix(tiles_m) {\n\n  const [width, height] = [tiles_m[0].length, tiles_m.length]\n\n  return (\n    new Array(height).fill(null).map(\n      (val, y) => \n      <div style={{'width': `${rowWidth(width)}`}} className='Gridrow'>\n          {new Array(width).fill(null).map((val, x) => <Tile \n            value={tiles_m[y][x]} \n            />\n          )}\n      </div>\n    )\n  )\n}\n      \nfunction Grid(props) {\n\n  const width   = useState(props.width)[0];\n  const height  = useState(props.height)[0];\n  const [tiles_m, setMatrix] = useState(generateNewTile(initMatrix(width, height)));\n\n  return (\n    <div>\n      <button onClick={() => setMatrix(generateNewTile(slideLeft(tiles_m)))}>\n        slide left!\n      </button>\n      <div className='Container'>\n        <div className='Gridcontainer'>\n          {generateTileMatrix(tiles_m, width, height)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nexport default Grid"]},"metadata":{},"sourceType":"module"}